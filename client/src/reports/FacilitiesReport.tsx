import { FC } from "react";
import Paper from "@mui/material/Paper";
import Table from "@mui/material/Table";
import TableBody from "@mui/material/TableBody";
import TableCell from "@mui/material/TableCell";
import TableContainer from "@mui/material/TableContainer";
import TableHead from "@mui/material/TableHead";
import TableRow from "@mui/material/TableRow";
import isoToTime from "../utils/isoToTime";
import isoToDate from "../utils/isoToDate";
import { Typography } from "@mui/material";

const columns: readonly AdminFacilitiesColumnData[] = [
  { id: "name", label: "Name/Building", minWidth: 145 },
  { id: "description", label: "Description", minWidth: 140 },
  { id: "status", label: "Status", minWidth: 100 },
  { id: "createdAt", label: "Created At", minWidth: 150 },
  { id: "updatedAt", label: "Updated At", minWidth: 150 },
  { id: "deletedAt", label: "Deleted At", minWidth: 150 },
  { id: "fm", label: "Facility Manager", minWidth: 170 },
];
const FacilitiesReport: FC<AdminFacilitiesTableProps> = ({
  facilities,
  forwardedRef,
}) => {
  const rows: AdminFacilitiesRowData[] =
    facilities &&
    facilities.map((facility) => ({
      name: (
        <>
          {facility.name} /
          <br />
          {facility.building!.name}
        </>
      ),
      description: facility.description,
      status: facility.isActive ? "Active" : "Inactive",
      createdAt: (
        <>
          {isoToTime(facility.createdAt!)}
          <br />
          {isoToDate(facility.createdAt!).toString()}
        </>
      ),
      updatedAt: (
        <>
          {isoToTime(facility.updatedAt!)}
          <br />
          {isoToDate(facility.updatedAt!).toString()}
        </>
      ),
      deletedAt: (
        <>
          {facility.deletedAt ? isoToTime(facility.deletedAt!) : "N/A"}
          <br />
          {facility.deletedAt && isoToDate(facility.deletedAt!).toString()}
        </>
      ),
      fm: (
        <>
          {facility.isActive ? facility.facilityManager?.user.name : "N/A"}
          <br />
          {facility.isActive &&
            "Id:" + facility.facilityManager?.user.employeeId}
        </>
      ),
    }));

  return (
    <div className="w-full flex flex-col gap-4" ref={forwardedRef}>
      <div className="w-full flex justify-between items-center">
        <Typography variant="h6" component="h1">
          Facilities Bookings Report
        </Typography>
        <Typography variant="caption" component="p">
          Generated by Admin at: {new Date().toLocaleString()}
        </Typography>
      </div>
      <Paper sx={{ overflow: "hidden" }}>
        <TableContainer>
          <Table stickyHeader>
            <TableHead>
              <TableRow>
                {columns.map((column) => (
                  <TableCell
                    key={column.id}
                    align="left"
                    sx={{
                      backgroundColor: "#646464",
                      color: "#fff",
                      fontSize: "10px",
                      paddingBlock: "6px",
                    }}
                  >
                    {column.label}
                  </TableCell>
                ))}
              </TableRow>
            </TableHead>
            <TableBody>
              {rows.map((row, index) => {
                return (
                  <TableRow hover role="checkbox" tabIndex={-1} key={index}>
                    {columns.map((column) => {
                      const value = row[column.id];
                      return (
                        <TableCell
                          key={column.id}
                          align={"left"}
                          sx={{
                            fontSize: "10px",
                            paddingBlock: "6px",
                          }}
                        >
                          {value ? (
                            value
                          ) : (
                            <p className="text-blue-600">Not approved</p>
                          )}
                        </TableCell>
                      );
                    })}
                  </TableRow>
                );
              })}
            </TableBody>
          </Table>
        </TableContainer>
      </Paper>{" "}
    </div>
  );
};

export default FacilitiesReport;
