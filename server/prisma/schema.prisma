// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  GROUP_DIRECTOR
  FACILITY_MANAGER
  ADMIN
}

enum ApprovalStatus {
  PENDING
  APPROVED_BY_GD
  APPROVED_BY_FM
  APPROVED_BY_ADMIN
  REJECTED
}

model Session {
  id        String   @id @default(uuid())
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id              Int               @id @default(autoincrement())
  name            String
  employee_id     String            @unique
  password        String
  role            Role              @default(USER)
  booking         Booking[]
  GroupDirector   GroupDirector[]
  FacilityManager FacilityManager[]
}

model Booking {
  id        Int            @id @default(autoincrement())
  title     String
  purpose   String
  user      User           @relation(fields: [user_id], references: [id])
  user_id   Int
  status    ApprovalStatus @default(PENDING)
  createdAt DateTime
  startTime DateTime
  endTime   DateTime
  color     String
}

model Facility {
  id                Int               @id @default(autoincrement())
  name              String
  description       String
  icon              String
  groupDirector     GroupDirector[]
  facilityManager   FacilityManager[]
  groupDirectorId   Int
  facilityManagerId Int
}

model GroupDirector {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  facility   Facility @relation(fields: [facilityId], references: [id])
  facilityId Int      @unique
}

model FacilityManager {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  facility   Facility @relation(fields: [facilityId], references: [id])
  facilityId Int      @unique
}
